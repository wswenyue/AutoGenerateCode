name: RC Version Publish

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  # On main/release, we don't want any jobs cancelled so the sha is used to name the group
  # On PR branches, we cancel the job if new commits are pushed
  group: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/release' ) && format('rc-base-{0}', github.sha) || format('rc-{0}', github.ref) }}
  cancel-in-progress: true

env:
  # Set the GRADLE_ENTERPRISE_ACCESS_KEY so that Gradle Build Scans are generated
  #  GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
  # Enable debug for the `gradle-build-action` cache operations
  GRADLE_BUILD_ACTION_CACHE_DEBUG_ENABLED: true
#  plugin_version_suf: ${{ format('-rc-{0}', github.sha) }}

jobs:
  build:
    name: "Compile All"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11

      - name: Set Evn
        run: |
          export GIT_PR_SHA="${{ github.sha }}"
          export GIT_PR_SHA_SHORT="${GIT_PR_SHA:0:10}"
#          export plugin_version_suf=`git rev-parse --short HEAD`
        env:
          plugin_version_suf: ${{ git rev-parse --short HEAD }}

      - name: Print Env
        run: |
          echo "GIT_PR_SHA: ${GIT_PR_SHA}"
          echo "GIT_PR_SHA_SHORT: ${GIT_PR_SHA_SHORT}"
          echo "plugin_version_suf: ${env.plugin_version_suf}"

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Execute Gradle build
        run: ./gradlew Hello

#      - name: Test result
#        run: |
#          pwd
#          ls -alh
#          ls -alh app/build/outputs/apk/debug/
#          ls -alh app/build/outputs/apk/release/
#          echo "finish"

#      - uses: actions/upload-artifact@v3
#        with:
#          name: "app-debug.apk"
#          path: app/build/outputs/apk/debug/app-debug.apk
#
#      - uses: actions/upload-artifact@v3
#        with:
#          name: "app-release.apk"
#          path: app/build/outputs/apk/release/app-release-unsigned.apk
#
#      - uses: actions/upload-artifact@v3
#        with:
#          name: "kotlin-tooling-metadata.json"
#          path: app/build/kotlinToolingMetadata/kotlin-tooling-metadata.json